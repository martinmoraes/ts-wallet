openapi: 3.0.0
info:
  title: Microservice Users
  version: 1.0.0

servers:
  - url: http://localhost:3002
    description: Local

tags:
  - name: Users
  - name: Auth

paths:
  # Users
  /users:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
      tags:
        - Users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: Response
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    get:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsersResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /users/:id:
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
          description: Response
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    get:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    delete:
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        200:
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  # Auth
  /auth:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      tags:
        - Auth
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
          description: Response
        '401':
          $ref: '#/components/responses/UnauthorizedError'

components:
  schemas:
    Users:
      type: object
      required:
        - id
        - first_name
        - last_name
        - password
        - email
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        password:
          type: string
        email:
          type: string
    UsersModel:
      type: object
      required:
        - id
        - first_name
        - last_name
        - password
        - email
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        password:
          type: string
        email:
          type: string
    UsersResponse:
      type: object
      required:
        - id
        - first_name
        - last_name
        - email
      properties:
        id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
    AuthRequest:
      type: object
      required:
        - email
        - password
      properties:
        user:
          type: object
          properties:
            email:
              type: string
            password:
              type: string

    AuthResponse:
      type: object
      required:
        - email
        - password
      properties:
        user:
          type: object
          properties:
            id:
              type: string
            first_name:
              type: string
            last_name:
              type: string
            email:
              type: string
        access_token:
          type: string
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
